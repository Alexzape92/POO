//1.1)No se puede definir un método virtual puro. Si se refiere al prototipo, sería virtual void f() = 0;
//2.2)Es una clase abstracta
//3.3)Habría un error de compilación, ya que no se pueden crear objetos de B. Es dinámica, ya que el método f es polimórfico (virtual).


//2.1)La primera imprimiría "Processing object X...", y la segunda "Processing object Y..."
//2.2)Sería mejor declarar f() en V como virtual puro, e implementar f en x, y y z implementando sólo la parte correspondiente a cada tipo.


//3.1)
	template<typename T = char, size_t N = 256> class Buffer{
		Buffer();
	private:
		std::vector<T> vec;
	}; 
	
	template<typename T, size_t N>
	Buffer::Buffer(): vec(N){}
//3.2)
	Buffer<int, 128> buff1;
	Buffer buff2;
	
/*4) Ver transparencia 22 T3
	B<0>::B<0>(), B<1>::B<1>(), B<2>::B<2>(), D::D()
